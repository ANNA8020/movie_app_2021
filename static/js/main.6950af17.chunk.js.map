{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAuCeA,MAjCf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACZ,oBAAgBL,UAAU,gBAA1B,SACKI,GADIC,QAKb,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,kBCiDDC,G,kNA5DbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IATzB,2C,uDAgBZ,WAEEQ,KAAKN,c,oBAEP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAInB,OACE,yBAASV,UAAU,YAAnB,SAICS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,4BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEAC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GA7CLE,IAAMC,YCFxBC,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,a","file":"static/js/main.6950af17.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// 여기서 state가 필요 없어서 class component도 필요 없음\n// this file render the movie!\nimport \"./Movie.css\";\n\nfunction Movie({ year, title, summary, poster, genres }) {\n    return(\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__geners\">\n                    {genres.map((genre, index) => (\n                    <li key={index} className=\"geners__genre\">\n                        {genre}\n                    </li>\n                ))}\n                </ul>\n                <p className=\"movie_summary\">{summary.slice(0, 180)}. . .</p>\n                {/* 요약본이 너무 길다 싶으면 summary.slice(길이 설정) */}\n            </div>\n        </div>\n    );\n}\n// Movie라는 component를 생성하면 사용할 수 있음\n// props는 아래 propsTypes를 통해 정의\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n// propTypes는 number, string, bool, func, node 등 다양하게 존재\n\nexport default Movie;\n// export를 해야 다른 JS file에서 Movie라는 component를 사용할 수 있음","import React from \"react\";\nimport axios from \"axios\";\n// axious는 fetch 윗단계?\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  // react component (required!)\n  // state 이용을 위해 class component를 사용\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n      );\n    // ES6, movies.data.data.movies 구식임\n    this.setState({ movies, isLoading: false });\n    // movies:movies → moives (JS가 이해하기 때문에 이렇게 써도 됌)\n    // 1: setStart-movie 2: axious-movies\n    // movies를 state 넣음\n    // ES6 쓰자 ⍨\n  };\n  // async await는 JS에게 실행되는데 시간이 걸리니까 기달려줘 라는 뜻\n  componentDidMount(){\n      // component가 mount되자 마자 호출 됌\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    // ES6, this.state의 반복을 줄여줌\n    // this.movies.state.movies ← 못생긴 코드로 하기 싫찮아? 그춍?\n    // state로 부터 movies를 가져와\n    return ( \n      <section className=\"container\">\n      {/* HTML처럼 보이지만 이건 JS야 (JSX라고 하면 됌) */}\n      {/* HTML-class JSX-className */}\n      {/* JS class 안에 있으면 component class에 의해 혼란스러워해 그래서 이름을 바꾼거야 */}\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading. . .</span>\n        </div> \n      ) : (\n        <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie\n            key={movie.id}\n            id={movie.id}\n            year={movie.year}\n            title={movie.title}\n            summary={movie.summary}\n            poster={movie.medium_cover_image}\n            genres={movie.genres}\n          />\n          ))}\n        </div>\n        )}\n    </section>\n    // state를 사용해 Loading 한거야\n    // map으로 부터 뭔가를 return해야 해﹗ (Remember)\n    // object를 풀어줄 때 map 사용하고, jsx에서는 props를 통해서 값을 전달\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  // 정보를 보내는 방법 \n  document.getElementById('potato')\n);\n"],"sourceRoot":""}